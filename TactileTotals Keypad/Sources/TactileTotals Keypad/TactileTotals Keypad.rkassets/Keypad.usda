#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 1.0 (409.60.6)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["TactileTotals", "Key7", "Key8", "Key9", "Key4", "Key5", "Key6", "Key1", "Key2", "Key3", "Key0", "KeyDecimal", "KeyEqual", "KeyClear", "KeyMulti", "KeyDiv", "KeyMinus", "KeyPlus", "Titlebar", "Shell"]
    def "TactileTotals" (
        active = true
        references = @TactileTotals.usdz@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Keypad" (
            customData = {
                float3 rotationEulerHint = (-1.5707964, 0, 0)
            }
        )
        {
            quatf xformOp:orient = (0.70710677, -0.70710677, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            over "Key7" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Key7> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }

            over "Key8" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Key8> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }

            over "Key1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Key1> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }

            over "Key9" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Key9> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }

            over "Key2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Key2> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }

            over "Key3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Key3> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }

            over "Key4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Key4> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }

            over "Key6" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Key6> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }

            over "Key5" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Key5> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }

            over "Key0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Key0> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }

            over "KeyDecimal" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/KeyDecimal> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }

            over "KeyEqual" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/KeyEqual> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }

            over "KeyClear" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/KeyClear> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }

            over "KeyDiv" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/KeyDiv> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }

            over "KeyMinus" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/KeyMinus> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }

            over "KeyMulti" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/KeyMulti> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }

            over "KeyPlus" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/KeyPlus> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }
        }

        over "Shell" (
            prepend apiSchemas = ["MaterialBindingAPI"]
            customData = {
                float3 rotationEulerHint = (-1.5707964, 0, 0)
            }
        )
        {
            rel material:binding = </Root/Shell> (
                bindMaterialAs = "weakerThanDescendants"
            )
            quatf xformOp:orient = (0.70710677, -0.70710677, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            over "Titlebar" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Titlebar> (
                    bindMaterialAs = "weakerThanDescendants"
                )
            }
        }
    }

    def Material "Key7"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        prepend token outputs:surface.connect = </Root/Key7/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            color3f inputs:diffuseColor.connect = </Root/Key7/diffuseColor.outputs:rgb>
            float inputs:roughness = 0.35
            token outputs:surface
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @Textures/Key7.png@
            float2 inputs:st.connect = </Root/Key7/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/Key7/UsdPreviewSurface.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }

    def Material "Key8"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/Key8/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            color3f inputs:diffuseColor.connect = </Root/Key8/diffuseColor.outputs:rgb>
            token outputs:surface
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @Textures/Key8.png@
            float2 inputs:st.connect = </Root/Key8/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/Key8/UsdPreviewSurface.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }

    def Material "Key9"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/Key9/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            color3f inputs:diffuseColor.connect = </Root/Key9/diffuseColor.outputs:rgb>
            token outputs:surface
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @Textures/Key9.png@
            float2 inputs:st.connect = </Root/Key9/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/Key9/UsdPreviewSurface.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }

    def Material "Key4"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/Key4/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            color3f inputs:diffuseColor.connect = </Root/Key4/diffuseColor.outputs:rgb>
            token outputs:surface
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @Textures/Key4.png@
            float2 inputs:st.connect = </Root/Key4/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/Key4/UsdPreviewSurface.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }

    def Material "Key5"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/Key5/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            color3f inputs:diffuseColor.connect = </Root/Key5/diffuseColor.outputs:rgb>
            token outputs:surface
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @Textures/Key5.png@
            float2 inputs:st.connect = </Root/Key5/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/Key5/UsdPreviewSurface.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }

    def Material "Key6"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/Key6/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            color3f inputs:diffuseColor.connect = </Root/Key6/diffuseColor.outputs:rgb>
            token outputs:surface
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @Textures/Key6.png@
            float2 inputs:st.connect = </Root/Key6/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/Key6/UsdPreviewSurface.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }

    def Material "Key1"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/Key1/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            color3f inputs:diffuseColor.connect = </Root/Key1/diffuseColor.outputs:rgb>
            token outputs:surface
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @Textures/Key1.png@
            float2 inputs:st.connect = </Root/Key1/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/Key1/UsdPreviewSurface.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }

    def Material "Key2"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/Key2/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            color3f inputs:diffuseColor.connect = </Root/Key2/diffuseColor.outputs:rgb>
            token outputs:surface
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @Textures/Key2.png@
            float2 inputs:st.connect = </Root/Key2/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/Key2/UsdPreviewSurface.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }

    def Material "Key3"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/Key3/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            color3f inputs:diffuseColor.connect = </Root/Key3/diffuseColor.outputs:rgb>
            token outputs:surface
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @Textures/Key3.png@
            float2 inputs:st.connect = </Root/Key3/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/Key3/UsdPreviewSurface.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }

    def Material "Key0"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/Key0/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            color3f inputs:diffuseColor.connect = </Root/Key0/diffuseColor.outputs:rgb>
            token outputs:surface
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @Textures/Key0.png@
            float2 inputs:st.connect = </Root/Key0/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/Key0/UsdPreviewSurface.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }

    def Material "KeyDecimal"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/KeyDecimal/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            color3f inputs:diffuseColor.connect = </Root/KeyDecimal/diffuseColor.outputs:rgb>
            token outputs:surface
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @Textures/KeyDecimal.png@
            float2 inputs:st.connect = </Root/KeyDecimal/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/KeyDecimal/UsdPreviewSurface.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }

    def Material "KeyEqual"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/KeyEqual/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            color3f inputs:diffuseColor.connect = </Root/KeyEqual/diffuseColor.outputs:rgb>
            token outputs:surface
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @Textures/KeyEqual.png@
            float2 inputs:st.connect = </Root/KeyEqual/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/KeyEqual/UsdPreviewSurface.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }

    def Material "KeyClear"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/KeyClear/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            color3f inputs:diffuseColor.connect = </Root/KeyClear/diffuseColor.outputs:rgb>
            token outputs:surface
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @Textures/KeyClear.png@
            float2 inputs:st.connect = </Root/KeyClear/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/KeyClear/UsdPreviewSurface.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }

    def Material "KeyMulti"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/KeyMulti/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            color3f inputs:diffuseColor.connect = </Root/KeyMulti/diffuseColor.outputs:rgb>
            token outputs:surface
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @Textures/KeyMulti.png@
            float2 inputs:st.connect = </Root/KeyMulti/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/KeyMulti/UsdPreviewSurface.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }

    def Material "KeyDiv"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/KeyDiv/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            color3f inputs:diffuseColor.connect = </Root/KeyDiv/diffuseColor.outputs:rgb>
            token outputs:surface
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @Textures/KeyDiv.png@
            float2 inputs:st.connect = </Root/KeyDiv/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/KeyDiv/UsdPreviewSurface.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }

    def Material "KeyMinus"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/KeyMinus/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            color3f inputs:diffuseColor.connect = </Root/KeyMinus/diffuseColor.outputs:rgb>
            token outputs:surface
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @Textures/KeySub.png@
            float2 inputs:st.connect = </Root/KeyMinus/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/KeyMinus/UsdPreviewSurface.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }

    def Material "KeyPlus"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/KeyPlus/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            color3f inputs:diffuseColor.connect = </Root/KeyPlus/diffuseColor.outputs:rgb>
            token outputs:surface
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @Textures/KeyAdd.png@
            float2 inputs:st.connect = </Root/KeyPlus/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/KeyPlus/UsdPreviewSurface.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }

    def Material "Titlebar"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/Titlebar/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            color3f inputs:diffuseColor.connect = </Root/Titlebar/diffuseColor.outputs:rgb>
            float inputs:roughness = 0.1
            token outputs:surface
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @Textures/Titlebar.png@
            float2 inputs:st.connect = </Root/Titlebar/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/Titlebar/UsdPreviewSurface.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }

    def Material "Shell"
    {
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        prepend token outputs:surface.connect = </Root/Shell/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.09497825, 0.09497825, 0.09497825) (
                colorSpace = "srgb_texture"
            )
            float inputs:roughness = 0.25
            token outputs:surface
        }
    }
}

